name: PR
on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
    - main

jobs:
  minio_unit_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Crossplane CLI
        run: |
          curl -sL "https://raw.githubusercontent.com/crossplane/crossplane/master/install.sh" | sh
          sudo mv crossplane /usr/local/bin
      - name: Set up Homebrew
        uses: Homebrew/actions/setup-homebrew@main
      - name: Install dyff
        run: |
          brew install dyff
      - name: Run unit tests
        run: |
          cd minio/
          for i in {1..5}; do
            crossplane render tests/00"${i}"-buckets.yaml composition.yaml tests/functions.yaml --observed-resources tests/observed/00"${i}"-buckets.yaml -x > 00"${i}"-buckets.yaml
            dyff between 00"${i}"-buckets.yaml tests/expected/00"${i}"-buckets.yaml
          done
  minio_e2e_tests:
    runs-on: ubuntu-latest
    env:
      CHAINSAW: /home/runner/.chainsaw/chainsaw
      KUBECTL:
      CROSSPLANE_NAMESPACE: crossplane-system
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Uptest CLI
        run: |
          curl -OL https://github.com/crossplane/uptest/releases/download/v1.4.0/uptest_linux-amd64
          chmod +x uptest_linux-amd64
          sudo mv uptest_linux-amd64 /usr/local/bin/uptest
      - name: Install chainsaw CLI
        uses: kyverno/action-install-chainsaw@v0.2.12
        with:
          release: v0.2.12
      - name: Check chainsaw path
        run: which kubectl
      - name: Create kind cluster
        uses: helm/kind-action@v1
      - name: Run e2e tests
        run: |
          cd minio/
          uptest e2e --setup-script tests/e2e.sh examples/buckets.yaml
