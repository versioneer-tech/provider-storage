# Copyright 2025, EOX (https://eox.at) and Versioneer (https://versioneer.at)
# SPDX-License-Identifier: Apache-2.0

name: Publish Provider Storage
on:
  push:
    tags:
      - "[0-9]+\\.[0-9]+\\.[0-9]+"                 # 1.2.3
      - "[0-9]+\\.[0-9]+\\.[0-9]+-alpha\\.[0-9]+"  # 1.2.3-alpha.1
      - "[0-9]+\\.[0-9]+\\.[0-9]+-beta\\.[0-9]+"   # 1.2.3-beta.1
      - "[0-9]+\\.[0-9]+\\.[0-9]+-rc\\.[0-9]+"     # 1.2.3-rc.1

jobs:
  build_and_publish_configuration_packages:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Crossplane CLI
        run: |
          curl -sL "https://raw.githubusercontent.com/crossplane/crossplane/main/install.sh" | XP_VERSION=v2.0.2 sh
          sudo mv crossplane /usr/local/bin

      - name: Build and publish storage-minio Configuration Package
        shell: bash
        run: |
          set -euo pipefail
          ORG="${GITHUB_REPOSITORY_OWNER,,}"
          REPO="${GITHUB_REPOSITORY#*/}"; REPO="${REPO,,}"
          TAG="${GITHUB_REF_NAME##*/}"

          cp xrd.yaml minio/xrd.yaml

          crossplane xpkg build \
            --package-root=minio \
            --ignore 'dependencies/*' \
            --ignore 'tests/expected/*,tests/observed/*,tests/*' \
            --package-file minio/storage-minio.xpkg \
            --verbose

          crossplane xpkg push \
            --package-files=minio/storage-minio.xpkg \
            "ghcr.io/${ORG}/${REPO}/minio:${TAG}" \
            --verbose

      - name: Build and publish storage-aws Configuration Package
        shell: bash
        run: |
          set -euo pipefail
          ORG="${GITHUB_REPOSITORY_OWNER,,}"
          REPO="${GITHUB_REPOSITORY#*/}"; REPO="${REPO,,}"
          TAG="${GITHUB_REF_NAME##*/}"

          cp xrd.yaml aws/xrd.yaml

          crossplane xpkg build \
            --package-root=aws \
            --ignore 'dependencies/*' \
            --ignore 'tests/expected/*,tests/observed/*,tests/*' \
            --package-file aws/storage-aws.xpkg \
            --verbose

          crossplane xpkg push \
            --package-files=aws/storage-aws.xpkg \
            "ghcr.io/${ORG}/${REPO}/aws:${TAG}" \
            --verbose

      - name: Build and publish storage-otc Configuration Package
        shell: bash
        run: |
          set -euo pipefail
          ORG="${GITHUB_REPOSITORY_OWNER,,}"
          REPO="${GITHUB_REPOSITORY#*/}"; REPO="${REPO,,}"
          TAG="${GITHUB_REF_NAME##*/}"

          cp xrd.yaml otc/xrd.yaml

          crossplane xpkg build \
            --package-root=otc \
            --ignore 'dependencies/*' \
            --ignore 'tests/expected/*,tests/observed/*,tests/*' \
            --package-file otc/storage-otc.xpkg \
            --verbose

          crossplane xpkg push \
            --package-files=otc/storage-otc.xpkg \
            "ghcr.io/${ORG}/${REPO}/otc:${TAG}" \
            --verbose

  build_docs:
    runs-on: ubuntu-latest
    needs: build_and_publish_configuration_packages
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install mkdocs dependencies
        run: |
          pip install \
            mkdocs>=1.6 \
            mkdocs-material>=9.5 \
            mkdocs-material-extensions>=1.3 \
            pymdown-extensions>=10.8 \
            mike>=2.0

      - name: Set up Go (for crdoc)
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.x"
          cache: true

      - name: Install crdoc
        run: go install fybrik.io/crdoc@latest

      - name: Generate API docs
        run: |
          # Adapt XRD to K8s CRD format for crdoc
          sed -i 's/CompositeResourceDefinition/CustomResourceDefinition/' xrd.yaml
          sed -i 's#apiextensions.crossplane.io/v2#apiextensions.k8s.io/v1#g' xrd.yaml
          crdoc -r xrd.yaml -o docs/reference-guides/api.md

      - name: Replace Crossplane Configuration version with tag
        run: |
          TAG="${GITHUB_REF_NAME##*/}"
          find docs -type f -name "*.md" -exec sed -i "s/<!version!>/${TAG}/g" {} +

      - name: Set up Git identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Publish docs to GitHub Pages (gh-pages via mike)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git fetch origin gh-pages --depth=1 || true
          TAG="${GITHUB_REF_NAME##*/}"
          mike deploy -b gh-pages "${TAG}" latest --update-alias --push
          mike set-default -b gh-pages latest --push
