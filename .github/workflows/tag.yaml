# Copyright 2025, EOX (https://eox.at) and Versioneer (https://versioneer.at)
# SPDX-License-Identifier: Apache-2.0

name: Publish Provider Storage
on:
  push:
    tags:
      - "[0-9]+\\.[0-9]+"
      - "[0-9]+\\.[0-9]+-alpha\\.[0-9]+"
      - "[0-9]+\\.[0-9]+-beta\\.[0-9]+"
      - "[0-9]+\\.[0-9]+-rc\\.[0-9]+"

jobs:
  build_and_publish_configuration_packages:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Install Crossplane CLI
        run: |
          curl -sL "https://raw.githubusercontent.com/crossplane/crossplane/main/install.sh" | XP_VERSION=v2.0.2 sh
          sudo mv crossplane /usr/local/bin

      - name: Build and publish storage-minio Configuration Package
        run: |
          ORG="${GITHUB_REPOSITORY_OWNER,,}"
          REPO="${GITHUB_REPOSITORY#*/}"; REPO="${REPO,,}"

          cp xrd.yaml minio/xrd.yaml

          crossplane xpkg build \
            --package-root=minio \
            --ignore 'dependencies/*' \
            --ignore 'tests/expected/*,tests/observed/*,tests/*' \
            --package-file minio/storage-minio.xpkg \
            --verbose

          crossplane xpkg push \
            --package-files=minio/storage-minio.xpkg \
            "ghcr.io/${ORG}/${REPO}/minio:${GITHUB_REF_NAME##*/}" \
            --verbose

      - name: Build and publish storage-aws Configuration Package
        run: |
          ORG="${GITHUB_REPOSITORY_OWNER,,}"
          REPO="${GITHUB_REPOSITORY#*/}"; REPO="${REPO,,}"

          cp xrd.yaml aws/xrd.yaml

          crossplane xpkg build \
            --package-root=aws \
            --ignore 'dependencies/*' \
            --ignore 'tests/expected/*,tests/observed/*,tests/*' \
            --package-file aws/storage-aws.xpkg \
            --verbose

          crossplane xpkg push \
            --package-files=aws/storage-aws.xpkg \
            "ghcr.io/${ORG}/${REPO}/aws:${GITHUB_REF_NAME##*/}" \
            --verbose

      - name: Build and publish storage-otc Configuration Package
        run: |
          ORG="${GITHUB_REPOSITORY_OWNER,,}"
          REPO="${GITHUB_REPOSITORY#*/}"; REPO="${REPO,,}"

          cp xrd.yaml otc/xrd.yaml

          crossplane xpkg build \
            --package-root=otc \
            --ignore 'dependencies/*' \
            --ignore 'tests/expected/*,tests/observed/*,tests/*' \
            --package-file otc/storage-otc.xpkg \
            --verbose

          crossplane xpkg push \
            --package-files=otc/storage-otc.xpkg \
            "ghcr.io/${ORG}/${REPO}/otc:${GITHUB_REF_NAME##*/}" \
            --verbose
  build_docs:
    runs-on: ubuntu-latest
    needs: build_and_publish_configuration_packages
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Install mkdocs dependencies
        run: |
          pip install mkdocs mkdocs-material mike

      - name: Set up Go 1.24
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Install crdoc
        run: |
          go install fybrik.io/crdoc@latest

      - name: Generate API docs
        run: |
          sed -i 's/CompositeResourceDefinition/CustomResourceDefinition/' xrd.yaml
          sed -i 's/apiextensions.crossplane.io\/v2/apiextensions.k8s.io\/v1/g' xrd.yaml
          crdoc -r xrd.yaml -o docs/reference-guides/api.md

      - name: Replace Crossplane Configuration version with tag
        run: |
          find docs -type f -name "*.md" -exec sed -i "s/<!version!>/${GITHUB_REF_NAME##*/}/g" {} +

      - name: Set up GitHub Actions user
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@${GITHUB_REPOSITORY_OWNER}"

      - name: Publish docs to Github pages
        run: |
          git fetch origin gh-pages --depth=1
          mike deploy ${GITHUB_REF_NAME##*/} latest --update-alias --push
          mike set-default latest --push
