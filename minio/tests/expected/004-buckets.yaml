# Copyright 2025, EOX (https://eox.at) and Versioneer (https://versioneer.at)
# SPDX-License-Identifier: Apache-2.0

---
apiVersion: pkg.internal/v1beta1
kind: Storage
metadata:
  name: s-john
spec:
  bucketAccessGrants:
  - bucketName: s-john
    grantedAt: "2025-09-29T10:28:00Z"
    grantee: jane
    permission: None
  bucketAccessRequests:
  - bucketName: s-joe
    reason: Need access
    requestedAt: "2025-09-29T10:25:00Z"
  - bucketName: s-jeff
    reason: Need access
    requestedAt: "2025-09-29T10:26:00Z"
  - bucketName: s-jane
    reason: Need access
    requestedAt: "2025-09-29T10:27:00Z"
  buckets:
  - bucketName: s-john
    discoverable: true
  principal: john
status:
  conditions:
  - lastTransitionTime: "2024-01-01T00:00:00Z"
    message: 'Unready resources: bucket-s-john, observe-john-s-jane, observe-john-s-jeff,
      and 4 more'
    reason: Creating
    status: "False"
    type: Ready
---
apiVersion: kubernetes.m.crossplane.io/v1alpha1
kind: Object
metadata:
  annotations:
    crossplane.io/composition-resource-name: bucket-s-john
  labels:
    crossplane.io/composite: s-john
  name: bucket-s-john
  namespace: default
  ownerReferences:
  - apiVersion: pkg.internal/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: Storage
    name: s-john
    uid: ""
spec:
  forProvider:
    manifest:
      apiVersion: minio.crossplane.io/v1
      kind: Bucket
      metadata:
        annotations:
          storages.pkg.internal/discoverable: "true"
        name: s-john
      spec:
        providerConfigRef:
          name: provider-minio
  providerConfigRef:
    kind: ProviderConfig
    name: provider-kubernetes
---
apiVersion: kubernetes.m.crossplane.io/v1alpha1
kind: Object
metadata:
  annotations:
    crossplane.io/composition-resource-name: observe-john-s-jane
  labels:
    crossplane.io/composite: s-john
  name: observe-john-s-jane
  namespace: default
  ownerReferences:
  - apiVersion: pkg.internal/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: Storage
    name: s-john
    uid: ""
spec:
  forProvider:
    manifest:
      apiVersion: minio.crossplane.io/v1
      kind: Policy
      metadata:
        name: john.s-jane
  managementPolicies:
  - Observe
  providerConfigRef:
    kind: ProviderConfig
    name: provider-kubernetes
---
apiVersion: kubernetes.m.crossplane.io/v1alpha1
kind: Object
metadata:
  annotations:
    crossplane.io/composition-resource-name: observe-john-s-jeff
  labels:
    crossplane.io/composite: s-john
  name: observe-john-s-jeff
  namespace: default
  ownerReferences:
  - apiVersion: pkg.internal/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: Storage
    name: s-john
    uid: ""
spec:
  forProvider:
    manifest:
      apiVersion: minio.crossplane.io/v1
      kind: Policy
      metadata:
        name: john.s-jeff
  managementPolicies:
  - Observe
  providerConfigRef:
    kind: ProviderConfig
    name: provider-kubernetes
---
apiVersion: kubernetes.m.crossplane.io/v1alpha1
kind: Object
metadata:
  annotations:
    crossplane.io/composition-resource-name: observe-john-s-joe
  labels:
    crossplane.io/composite: s-john
  name: observe-john-s-joe
  namespace: default
  ownerReferences:
  - apiVersion: pkg.internal/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: Storage
    name: s-john
    uid: ""
spec:
  forProvider:
    manifest:
      apiVersion: minio.crossplane.io/v1
      kind: Policy
      metadata:
        name: john.s-joe
  managementPolicies:
  - Observe
  providerConfigRef:
    kind: ProviderConfig
    name: provider-kubernetes
---
apiVersion: kubernetes.m.crossplane.io/v1alpha1
kind: Object
metadata:
  annotations:
    crossplane.io/composition-resource-name: policy-full-s-john
  labels:
    crossplane.io/composite: s-john
  name: policy-full-s-john
  namespace: default
  ownerReferences:
  - apiVersion: pkg.internal/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: Storage
    name: s-john
    uid: ""
spec:
  forProvider:
    manifest:
      apiVersion: minio.crossplane.io/v1
      kind: Policy
      metadata:
        name: john.s-john
      spec:
        forProvider:
          rawPolicy: |-
            {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:*"
                  ],
                  "Resource": [
                    "arn:aws:s3:::s-john",
                    "arn:aws:s3:::s-john/*"
                  ]
                }
              ]
            }
        providerConfigRef:
          name: provider-minio
  providerConfigRef:
    kind: ProviderConfig
    name: provider-kubernetes
---
apiVersion: kubernetes.m.crossplane.io/v1alpha1
kind: Object
metadata:
  annotations:
    crossplane.io/composition-resource-name: policy-jane-s-john
  labels:
    crossplane.io/composite: s-john
  name: policy-jane-s-john
  namespace: default
  ownerReferences:
  - apiVersion: pkg.internal/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: Storage
    name: s-john
    uid: ""
spec:
  forProvider:
    manifest:
      apiVersion: minio.crossplane.io/v1
      kind: Policy
      metadata:
        name: jane.s-john
      spec:
        forProvider:
          rawPolicy: |-
            {
              "Version": "2012-10-17",
              "Statement": []
            }
        providerConfigRef:
          name: provider-minio
  providerConfigRef:
    kind: ProviderConfig
    name: provider-kubernetes
---
apiVersion: kubernetes.m.crossplane.io/v1alpha1
kind: Object
metadata:
  annotations:
    crossplane.io/composition-resource-name: user-john
  labels:
    crossplane.io/composite: s-john
  name: user-john
  namespace: default
  ownerReferences:
  - apiVersion: pkg.internal/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: Storage
    name: s-john
    uid: ""
spec:
  forProvider:
    manifest:
      apiVersion: minio.crossplane.io/v1
      kind: User
      metadata:
        name: john
      spec:
        forProvider:
          policies:
          - john.s-john
          userName: john
        providerConfigRef:
          name: provider-minio
        writeConnectionSecretToRef:
          name: john
          namespace: default
  providerConfigRef:
    kind: ProviderConfig
    name: provider-kubernetes
