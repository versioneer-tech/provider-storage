# Copyright 2025, EOX (https://eox.at) and Versioneer (https://versioneer.at)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.crossplane.io/v2
kind: CompositeResourceDefinition
metadata:
  name: storages.pkg.internal
spec:
  group: pkg.internal
  names:
    kind: Storage
    plural: storages
  scope: Namespaced
  versions:
    - name: v1beta1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              description: >
                Spec defines the desired state of a Storage resource.
              type: object
              # x-kubernetes-validations:
              #   - rule: >
              #       !has(self.buckets) || (
              #         self.buckets.all(b, has(b.bucketName) && b.bucketName != "") &&
              #         self.buckets.all(b,
              #           self.buckets.exists_one(bb, bb.bucketName == b.bucketName)
              #         )
              #       )
              #     message: "spec.buckets: bucketName must be non-empty and unique."
              #   - rule: >
              #       !has(self.bucketAccessRequests) || (
              #         self.bucketAccessRequests.all(r, has(r.bucketName) && r.bucketName != "") &&
              #         self.bucketAccessRequests.all(r,
              #           self.bucketAccessRequests.exists_one(rr, rr.bucketName == r.bucketName)
              #         )
              #       )
              #     message: "spec.bucketAccessRequests: bucketName must be non-empty and unique."
              #   - rule: >
              #       !has(self.bucketAccessGrants) || (
              #         self.bucketAccessGrants.all(g,
              #           has(g.bucketName) && g.bucketName != "" &&
              #           has(g.grantee) && g.grantee != ""
              #         ) &&
              #         self.bucketAccessGrants.all(g,
              #           self.bucketAccessGrants.exists_one(gg,
              #             gg.bucketName == g.bucketName && gg.grantee == g.grantee
              #           )
              #         )
              #       )
              #     message: "spec.bucketAccessGrants: (bucketName, grantee) must be non-empty and unique."
              properties:
                principal:
                  description: >
                    Identifier of the storage principal (owning user or service account)
                    under which buckets, access requests, and grants are managed.
                  type: string
                buckets:
                  description: >
                    Buckets to create as part of this Storage. Each bucket must be unique by
                    `bucketName` within this resource. The list is a map keyed by `bucketName`,
                    enabling key-based merges; ordering has no semantic meaning.
                  type: array
                  x-kubernetes-list-type: map
                  x-kubernetes-list-map-keys: ["bucketName"]
                  items:
                    type: object
                    properties:
                      bucketName:
                        description: >
                          Name of the bucket to create. Acts as the unique key in this list.
                        type: string
                      discoverable:
                        description: >
                          Whether this bucket is discoverable in a catalog by other principals.
                          Defaults to false if not specified.
                        type: boolean
                        default: false
                    required:
                      - bucketName
                bucketAccessRequests:
                  description: >
                    Requests for access to buckets owned by others. Always from `spec.principal`
                    to a single foreign bucket. Unique by `bucketName`; updates replace the request
                    for that bucket. Ordering has no semantic meaning.
                  type: array
                  x-kubernetes-list-type: map
                  x-kubernetes-list-map-keys: ["bucketName"]
                  items:
                    type: object
                    properties:
                      bucketName:
                        description: >
                          Name of the bucket to request access to. Acts as the unique key here.
                        type: string
                      reason:
                        description: >
                          Free-form reason for the request; informational only.
                        type: string
                    required:
                      - bucketName
                bucketAccessGrants:
                  description: >
                    Grants from this principal to other principals. Unique per `(bucketName, grantee)`.
                    The list is a map keyed by `bucketName` and `grantee`; updates replace the grant
                    for that pair. Ordering has no semantic meaning.
                  type: array
                  x-kubernetes-list-type: map
                  x-kubernetes-list-map-keys: ["bucketName","grantee"]
                  items:
                    type: object
                    properties:
                      bucketName:
                        description: >
                          Bucket for which the permission is granted (part of the unique key).
                        type: string
                      grantee:
                        description: >
                          Principal receiving the permission (part of the unique key).
                        type: string
                      permission:
                        description: >
                          Granted permission level for the grantee on the specified bucket.
                        type: string
                        enum:
                          - ReadWrite
                          - ReadOnly
                          - WriteOnly
                          - None
                    required:
                      - bucketName
                      - grantee
                      - permission
              required:
                - principal
                - buckets
            status:
              description: Status defines the observed state of a Storage resource.
              type: object
              properties: {}
